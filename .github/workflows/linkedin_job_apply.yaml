name: LinkedIn Auto Job Applier

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  # Allows manual triggering from GitHub Actions tab
  workflow_dispatch:

jobs:
  apply-to-jobs:
    runs-on: ubuntu-latest 
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install Chrome
        run: |
          # Remove any existing Chrome installations
          sudo apt-get remove google-chrome-stable
          sudo apt-get purge google-chrome-stable
          sudo rm -rf /usr/bin/google-chrome*
          sudo rm -rf /usr/bin/chromedriver*
          
          # Create required directories
          sudo mkdir -p /etc/apt/sources.list.d
          sudo mkdir -p /etc/apt/keyrings
          
          # Install latest Chrome using the new apt key method
          wget -q -O- https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg
          echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          # Get Chrome version and install matching chromedriver
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | awk -F'.' '{print $1}')
          wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}" -O chromedriver_version
          CHROMEDRIVER_VERSION=$(cat chromedriver_version)
          wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/bin/chromedriver
          sudo chown root:root /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          
          # Create required directories with proper permissions
          sudo mkdir -p /home/runner/Downloads
          sudo chmod 777 /home/runner/Downloads
          
          # Setup virtual display
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          
          # Print versions for debugging
          google-chrome --version
          chromedriver --version
          
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install openai
          
      - name: Configure for headless mode
        run: |
          # Update settings.py for headless mode
          cat << EOF >> config/settings.py
          
          # Headless mode configuration for GitHub Actions
          import os
          running_in_actions = True
          run_in_background = True
          safe_mode = True
          disable_extensions = True
          smooth_scroll = False
          keep_screen_awake = False
          stealth_mode = False
          showAiErrorAlerts = False
          downloads_path = "/home/runner/Downloads"  # Set downloads path for GitHub Actions
          EOF
          
      - name: Update credentials
        run: |
          python -c "
          import os
          import re
          
          # Read current content
          with open('config/secrets.py', 'r') as f:
              content = f.read()
          
          # Update the content
          if 'username = os.environ.get(\"LN_USERNAME\"' not in content:
              with open('config/secrets.py', 'a') as f:
                  f.write('\n# Auto-inserted by GitHub Actions\n')
                  f.write('username = os.environ.get(\"LN_USERNAME\", \"\")\n')
                  f.write('password = os.environ.get(\"LN_PASSWORD\", \"\")\n')
          "
          
      - name: Run LinkedIn Auto Job Applier
        env:
          DISPLAY: ":99.0"
          GITHUB_ACTIONS: "true"
          CI: "true"
          PYTHONPATH: "${PYTHONPATH}:/home/runner/work/LinkedJobApply/LinkedJobApply"
          DOWNLOADS_PATH: "/home/runner/Downloads"
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          LN_USERNAME: ${{ secrets.LN_USERNAME }}
          LN_PASSWORD: ${{ secrets.LN_PASSWORD }}
        run: |
          # Print debugging info
          echo "Python path: $PYTHONPATH"
          echo "Downloads path: $DOWNLOADS_PATH"
          google-chrome --version
          chromedriver --version
          python runAiBot.py

