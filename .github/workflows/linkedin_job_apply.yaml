name: LinkedIn Auto Job Applier

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  # Allows manual triggering from GitHub Actions tab
  workflow_dispatch:

jobs:
  job_application:
    # Use ubuntu-latest for standardized dependency installation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install additional dependencies for running Chrome headless
          sudo apt-get update
          sudo apt-get install -y xvfb google-chrome-stable
          echo "Installed Python packages:"
          pip list

      - name: Setup Chrome and Xvfb
        run: |
          # Start Xvfb
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "export DISPLAY=:99" >> $GITHUB_ENV

      - name: Create settings override
        run: |
          # Create settings override to bypass validation
          echo "# Auto-generated settings for headless mode" >> config/settings.py
          echo "import os" >> config/settings.py
          echo "running_in_actions = os.environ.get('GITHUB_ACTIONS') == 'true' or os.environ.get('CI') == 'true'" >> config/settings.py
          echo "if running_in_actions:" >> config/settings.py
          echo "    run_in_background = True" >> config/settings.py
          echo "    skip_validation = True" >> config/settings.py
          echo "    pause_at_failed_question = False" >> config/settings.py
          echo "    pause_before_submit = False" >> config/settings.py

      - name: Prepare config files
        run: |
          # Update configuration files using a more robust Python script
          python -c "
          import os
          import re

          # Read the secrets.py file
          with open('config/secrets.py', 'r') as f:
              content = f.read()

          # Find and replace any gemini_api_key line with our environment variable version
          # This is more robust than using sed with exact string matching
          pattern = re.compile(r'gemini_api_key\s*=.*')
          content = pattern.sub('gemini_api_key = os.environ.get(\"GEMINI_API_KEY\", \"\")', content)
          
          # Write the modified content back
          with open('config/secrets.py', 'w') as f:
              f.write(content)
          
          # Make sure username and password are set to read from environment variables
          with open('config/secrets.py', 'r') as f:
              content = f.read()
              
          # Check if we need to modify username and password
          if 'username = os.environ.get(\"LN_USERNAME\"' not in content:
              with open('config/secrets.py', 'a') as f:
                  f.write('\n# Auto-inserted by GitHub Actions\n')
                  f.write('username = os.environ.get(\"LN_USERNAME\", \"\")\n')
                  f.write('password = os.environ.get(\"LN_PASSWORD\", \"\")\n')
          
          print('Configuration files updated successfully')
          "
          
          # Print a confirmation that we're running in headless mode
          echo "Running in GitHub Actions headless mode"

      - name: Run LinkedIn Auto Job Applier
        env:
          GITHUB_ACTIONS: "true"
          CI: "true" 
          DISPLAY: ":99"
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          LN_USERNAME: ${{ secrets.LN_USERNAME }}
          LN_PASSWORD: ${{ secrets.LN_PASSWORD }}
        run: |
          # Run the application with proper headless configuration
          python runAiBot.py

