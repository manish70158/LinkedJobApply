name: LinkedIn Auto Job Applier

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  # Allows manual triggering
  workflow_dispatch:

jobs:
  apply-to-jobs:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          # Install Homebrew if not already installed
          which brew || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          
          # Update Homebrew and install dependencies
          brew update
          brew install python tk
          
          # Create Python virtual environment
          python3 -m venv venv
          source venv/bin/activate

      - name: Set up Chrome
        run: |
          # Install Chrome using Homebrew if not already installed
          brew install --cask google-chrome || true
          
          # Get Chrome version
          CHROME_VERSION=$(/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
          CHROME_MAJOR_VERSION=$(echo "$CHROME_VERSION" | cut -d. -f1)
          echo "Chrome version: $CHROME_VERSION (Major: $CHROME_MAJOR_VERSION)"
          echo "CHROME_VERSION=$CHROME_VERSION" >> $GITHUB_ENV
          echo "CHROME_MAJOR_VERSION=$CHROME_MAJOR_VERSION" >> $GITHUB_ENV

      - name: Set up ChromeDriver
        run: |
          # Install ChromeDriver using Homebrew
          brew install --cask chromedriver || true
          
          # Set permissions and remove quarantine attribute
          sudo xattr -d com.apple.quarantine /usr/local/bin/chromedriver || true
          chmod +x /usr/local/bin/chromedriver
          
          # Verify installation
          chromedriver --version

      - name: Configure for headless mode
        run: |
          # Create required directories
          mkdir -p ~/Downloads logs/screenshots "all excels" "all resumes/temp"
          chmod -R 755 ~/Downloads logs "all excels" "all resumes"
          
          # Update settings.py for headless mode
          cat << EOF >> config/settings.py
          
          # Headless mode configuration for GitHub Actions
          import os
          running_in_actions = True
          run_in_background = True
          safe_mode = True
          disable_extensions = True
          smooth_scroll = False
          keep_screen_awake = False
          stealth_mode = False
          showAiErrorAlerts = False
          downloads_path = os.path.expanduser("~/Downloads")
          EOF

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Run LinkedIn Auto Job Applier
        env:
          GITHUB_ACTIONS: "true"
          CI: "true"
          PYTHONPATH: "${PYTHONPATH}:/Users/runner/work/LinkedJobApply/LinkedJobApply"
          DOWNLOADS_PATH: "/Users/runner/Downloads"
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          LN_USERNAME: ${{ secrets.LN_USERNAME }}
          LN_PASSWORD: ${{ secrets.LN_PASSWORD }}
        run: |
          # Print environment info (without exposing secrets)
          echo "Environment configuration:"
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "CI: $CI"
          echo "PYTHONPATH: $PYTHONPATH"
          echo "DOWNLOADS_PATH: $DOWNLOADS_PATH"
          echo "LN_USERNAME is set: ${{ secrets.LN_USERNAME != '' }}"
          echo "LN_PASSWORD is set: ${{ secrets.LN_PASSWORD != '' }}"
          
          python runAiBot.py

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: application-logs
          path: |
            logs/
            all excels/
          retention-days: 7